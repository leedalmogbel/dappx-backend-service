{
  "contractName": "dAppStoreToken",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"dAppStore Token implementation.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.      * Requirements:      * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"burn(uint256)\":{\"details\":\"Destoys `amount` tokens from the caller.      * See `ERC20._burn`.\"},\"constructor\":{\"details\":\"Constructor that gives msg.sender all of existing tokens.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.      * Emits an `Approval` event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.      * Emits an `Approval` event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.      * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/mnt/d/project/DCN/dappx/contracts/dAppStoreToken.sol\":\"dAppStoreToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/mnt/d/project/DCN/dappx/contracts/ERC20.sol\":{\"keccak256\":\"0x23f76e3254eeb5b985bebc7e67142d180b86577a955cc46485007d7916bb1a2a\",\"urls\":[\"bzz-raw://e608a2daa86fccb3eea6c07f3f1e80873970330901806ef52b02b0594d65de7f\",\"dweb:/ipfs/QmVwscvwWAMqNiNSqqi8MvEvNmpv33moBp5un6i5NqYgED\"]},\"/mnt/d/project/DCN/dappx/contracts/ERC20Burnable.sol\":{\"keccak256\":\"0xafa54d12538f813c5cc336256c39de86c7dc2d82e740e9008ac2836081574a37\",\"urls\":[\"bzz-raw://c33e7ef924f03b77f5c1042b2e449489349cc417040cd7ce0def01a771002d4b\",\"dweb:/ipfs/QmXJ9B2cAynAkDUCjULxHWhe9Ep2SedjnRoYocLvdrVEUi\"]},\"/mnt/d/project/DCN/dappx/contracts/IERC20.sol\":{\"keccak256\":\"0xb6825bfea7618d024852ac58fd5796db27ebe6a04e6ca0e5701486484330f714\",\"urls\":[\"bzz-raw://051461a847ae40ca614b8327671d5f9081ce5ea69deeb808fe1487a5a7950ec7\",\"dweb:/ipfs/QmZKrMnBkfUzTJc2wH5QKxxi18UbK6qi3CzUx6wsSWUgU4\"]},\"/mnt/d/project/DCN/dappx/contracts/Ownable.sol\":{\"keccak256\":\"0x8fdc9676abc850a5b1d8435bcc7f78d2bdb9dcb1e7c88587a924824b7a9b7c27\",\"urls\":[\"bzz-raw://3a84db8a12d8d09432c84c2aac6a27a7ec285e6138b3a320dfe61f5d79720738\",\"dweb:/ipfs/QmZBz2MBEv1SxDVAu69HumejPLdYjfk9sPbE8FhW4b3ZDJ\"]},\"/mnt/d/project/DCN/dappx/contracts/SafeMath.sol\":{\"keccak256\":\"0x11a066623aa9848c105e3610dd03f30d87881271d8da83a3974f898d5314025c\",\"urls\":[\"bzz-raw://76812a0f7047a8d98e291415723003b6238024ef37572453dcd96c70c946f9a7\",\"dweb:/ipfs/Qmf8SQN4J9ghTq3mVjxenmVAZtR8RnqvdfDvR5jma1gpJk\"]},\"/mnt/d/project/DCN/dappx/contracts/dAppStoreToken.sol\":{\"keccak256\":\"0xf35eeb04d22485865227724624f31b42d111f8249ada393adefbc3da269f7976\",\"urls\":[\"bzz-raw://5a76792f0706751c0237473ed0ac24034d2501def614e3f6b3d6773e7272ada3\",\"dweb:/ipfs/QmcGVyCzpnA7fga9FoAsb7m2APbtFDYPyVi65vTy7WuK8m\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36b04d8c55aefb8c05b5c0000006003819055336000818152600160209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3610c16806100c46000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d7146102dd578063a9059cbb14610309578063dd62ed3e14610335578063f2fde38b1461036357610100565b8063715018a6146102a15780638da5cb5b146102a95780638f32d59b146102cd57806395d89b41146102d557610100565b8063313ce567116100d3578063313ce56714610212578063395093511461023057806342966c681461025c57806370a082311461027b57610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d610389565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b0381351690602001356103b4565b604080519115158252519081900360200190f35b6101ca6103ca565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b038135811691602081013590911690604001356103d0565b61021a610427565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561024657600080fd5b506001600160a01b03813516906020013561042c565b6102796004803603602081101561027257600080fd5b5035610468565b005b6101ca6004803603602081101561029157600080fd5b50356001600160a01b03166104ce565b6102796104e9565b6102b161058c565b604080516001600160a01b039092168252519081900360200190f35b6101ae61059b565b61010d6105ac565b6101ae600480360360408110156102f357600080fd5b506001600160a01b0381351690602001356105cd565b6101ae6004803603604081101561031f57600080fd5b506001600160a01b038135169060200135610609565b6101ca6004803603604081101561034b57600080fd5b506001600160a01b0381358116916020013516610616565b6102796004803603602081101561037957600080fd5b50356001600160a01b0316610641565b6040518060400160405280600f81526020016e3220b83839ba37b932902a37b5b2b760891b81525081565b60006103c13384846106a3565b50600192915050565b60035490565b60006103dd84848461078f565b6001600160a01b03841660009081526002602090815260408083203380855292529091205461041d918691610418908663ffffffff6108d316565b6106a3565b5060019392505050565b601281565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103c1918590610418908663ffffffff61093016565b61047061059b565b6104c1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6104cb3382610991565b50565b6001600160a01b031660009081526001602052604090205490565b6104f161059b565b610542576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6040518060400160405280600581526020016408882a0a0b60db1b81525081565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103c1918590610418908663ffffffff6108d316565b60006103c133848461078f565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61064961059b565b61069a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6104cb81610a6c565b6001600160a01b0383166106e85760405162461bcd60e51b8152600401808060200182810382526024815260200180610bbe6024913960400191505060405180910390fd5b6001600160a01b03821661072d5760405162461bcd60e51b8152600401808060200182810382526022815260200180610b566022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166107d45760405162461bcd60e51b8152600401808060200182810382526025815260200180610b996025913960400191505060405180910390fd5b6001600160a01b0382166108195760405162461bcd60e51b8152600401808060200182810382526023815260200180610b0d6023913960400191505060405180910390fd5b6001600160a01b038316600090815260016020526040902054610842908263ffffffff6108d316565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610877908263ffffffff61093016565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561092a576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008282018381101561098a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b0382166109d65760405162461bcd60e51b8152600401808060200182810382526021815260200180610b786021913960400191505060405180910390fd5b6003546109e9908263ffffffff6108d316565b6003556001600160a01b038216600090815260016020526040902054610a15908263ffffffff6108d316565b6001600160a01b0383166000818152600160209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b038116610ab15760405162461bcd60e51b8152600401808060200182810382526026815260200180610b306026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820f9029ea2f715359fb0ecb924cbd23f801472799cf636ed7701235e6150f0194f64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d7146102dd578063a9059cbb14610309578063dd62ed3e14610335578063f2fde38b1461036357610100565b8063715018a6146102a15780638da5cb5b146102a95780638f32d59b146102cd57806395d89b41146102d557610100565b8063313ce567116100d3578063313ce56714610212578063395093511461023057806342966c681461025c57806370a082311461027b57610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d610389565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b0381351690602001356103b4565b604080519115158252519081900360200190f35b6101ca6103ca565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b038135811691602081013590911690604001356103d0565b61021a610427565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561024657600080fd5b506001600160a01b03813516906020013561042c565b6102796004803603602081101561027257600080fd5b5035610468565b005b6101ca6004803603602081101561029157600080fd5b50356001600160a01b03166104ce565b6102796104e9565b6102b161058c565b604080516001600160a01b039092168252519081900360200190f35b6101ae61059b565b61010d6105ac565b6101ae600480360360408110156102f357600080fd5b506001600160a01b0381351690602001356105cd565b6101ae6004803603604081101561031f57600080fd5b506001600160a01b038135169060200135610609565b6101ca6004803603604081101561034b57600080fd5b506001600160a01b0381358116916020013516610616565b6102796004803603602081101561037957600080fd5b50356001600160a01b0316610641565b6040518060400160405280600f81526020016e3220b83839ba37b932902a37b5b2b760891b81525081565b60006103c13384846106a3565b50600192915050565b60035490565b60006103dd84848461078f565b6001600160a01b03841660009081526002602090815260408083203380855292529091205461041d918691610418908663ffffffff6108d316565b6106a3565b5060019392505050565b601281565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103c1918590610418908663ffffffff61093016565b61047061059b565b6104c1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6104cb3382610991565b50565b6001600160a01b031660009081526001602052604090205490565b6104f161059b565b610542576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6040518060400160405280600581526020016408882a0a0b60db1b81525081565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103c1918590610418908663ffffffff6108d316565b60006103c133848461078f565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61064961059b565b61069a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6104cb81610a6c565b6001600160a01b0383166106e85760405162461bcd60e51b8152600401808060200182810382526024815260200180610bbe6024913960400191505060405180910390fd5b6001600160a01b03821661072d5760405162461bcd60e51b8152600401808060200182810382526022815260200180610b566022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166107d45760405162461bcd60e51b8152600401808060200182810382526025815260200180610b996025913960400191505060405180910390fd5b6001600160a01b0382166108195760405162461bcd60e51b8152600401808060200182810382526023815260200180610b0d6023913960400191505060405180910390fd5b6001600160a01b038316600090815260016020526040902054610842908263ffffffff6108d316565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610877908263ffffffff61093016565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561092a576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008282018381101561098a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b0382166109d65760405162461bcd60e51b8152600401808060200182810382526021815260200180610b786021913960400191505060405180910390fd5b6003546109e9908263ffffffff6108d316565b6003556001600160a01b038216600090815260016020526040902054610a15908263ffffffff6108d316565b6001600160a01b0383166000818152600160209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b038116610ab15760405162461bcd60e51b8152600401808060200182810382526026815260200180610b306026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820f9029ea2f715359fb0ecb924cbd23f801472799cf636ed7701235e6150f0194f64736f6c63430005100032",
  "sourceMap": "111:616:6:-;;;542:182;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;677:6:4;:19;;-1:-1:-1;;;;;;677:19:4;686:10;677:19;;;;712:40;;-1:-1:-1;;;;;745:6:4;;;;;677;712:40;;677:6;;712:40;382:41:6;574:12;:29;;;624:10;614:21;;;;:9;:21;;;;;;;;:38;;;668:48;;;;;;624:10;;614:21;;668:48;;;;;;;;;;111:616;;;;;;",
  "deployedSourceMap": "111:616:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;111:616:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;195:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;195:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2348:148:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2348:148:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1371:91;;;:::i;:::-;;;;;;;;;;;;;;;;2967:256;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2967:256:0;;;;;;;;;;;;;;;;;:::i;295:35:6:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3632:206:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3632:206:0;;;;;;;;:::i;412:91:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;412:91:1;;:::i;:::-;;1525:110:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1525:110:0;-1:-1:-1;;;;;1525:110:0;;:::i;1652:140:4:-;;;:::i;841:79::-;;;:::i;:::-;;;;-1:-1:-1;;;;;841:79:4;;;;;;;;;;;;;;1207:92;;;:::i;249:39:6:-;;;:::i;4341:216:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4341:216:0;;;;;;;;:::i;1848:156::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1848:156:0;;;;;;;;:::i;2067:134::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2067:134:0;;;;;;;;;;:::i;1947:109:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1947:109:4;-1:-1:-1;;;;;1947:109:4;;:::i;195:47:6:-;;;;;;;;;;;;;;-1:-1:-1;;;195:47:6;;;;:::o;2348:148:0:-;2413:4;2430:36;2439:10;2451:7;2460:5;2430:8;:36::i;:::-;-1:-1:-1;2484:4:0;2348:148;;;;:::o;1371:91::-;1442:12;;1371:91;:::o;2967:256::-;3056:4;3073:36;3083:6;3091:9;3102:6;3073:9;:36::i;:::-;-1:-1:-1;;;;;3149:19:0;;;;;;:11;:19;;;;;;;;3137:10;3149:31;;;;;;;;;3120:73;;3129:6;;3149:43;;3185:6;3149:43;:35;:43;:::i;:::-;3120:8;:73::i;:::-;-1:-1:-1;3211:4:0;2967:256;;;;;:::o;295:35:6:-;328:2;295:35;:::o;3632:206:0:-;3738:10;3712:4;3759:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3759:32:0;;;;;;;;;;3712:4;;3729:79;;3750:7;;3759:48;;3796:10;3759:48;:36;:48;:::i;412:91:1:-;1053:9:4;:7;:9::i;:::-;1045:54;;;;;-1:-1:-1;;;1045:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;470:25:1;476:10;488:6;470:5;:25::i;:::-;412:91;:::o;1525:110:0:-;-1:-1:-1;;;;;1609:18:0;1582:7;1609:18;;;:9;:18;;;;;;;1525:110::o;1652:140:4:-;1053:9;:7;:9::i;:::-;1045:54;;;;;-1:-1:-1;;;1045:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1751:1;1735:6;;1714:40;;-1:-1:-1;;;;;1735:6:4;;;;1714:40;;1751:1;;1714:40;1782:1;1765:19;;-1:-1:-1;;;;;;1765:19:4;;;1652:140::o;841:79::-;879:7;906:6;-1:-1:-1;;;;;906:6:4;841:79;:::o;1207:92::-;1247:4;1285:6;-1:-1:-1;;;;;1285:6:4;1271:10;:20;;1207:92::o;249:39:6:-;;;;;;;;;;;;;;-1:-1:-1;;;249:39:6;;;;:::o;4341:216:0:-;4452:10;4426:4;4473:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4473:32:0;;;;;;;;;;4426:4;;4443:84;;4464:7;;4473:53;;4510:15;4473:53;:36;:53;:::i;1848:156::-;1917:4;1934:40;1944:10;1956:9;1967:6;1934:9;:40::i;2067:134::-;-1:-1:-1;;;;;2166:18:0;;;2139:7;2166:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2067:134::o;1947:109:4:-;1053:9;:7;:9::i;:::-;1045:54;;;;;-1:-1:-1;;;1045:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:28;2039:8;2020:18;:28::i;6554:335:0:-;-1:-1:-1;;;;;6647:19:0;;6639:68;;;;-1:-1:-1;;;6639:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6726:21:0;;6718:68;;;;-1:-1:-1;;;6718:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6799:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;6850:31;;;;;;;;;;;;;;;;;6554:335;;;:::o;5047:429::-;-1:-1:-1;;;;;5145:20:0;;5137:70;;;;-1:-1:-1;;;5137:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5226:23:0;;5218:71;;;;-1:-1:-1;;;5218:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5322:17:0;;;;;;:9;:17;;;;;;:29;;5344:6;5322:29;:21;:29;:::i;:::-;-1:-1:-1;;;;;5302:17:0;;;;;;;:9;:17;;;;;;:49;;;;5385:20;;;;;;;:32;;5410:6;5385:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5362:20:0;;;;;;;:9;:20;;;;;;;;;:55;;;;5433:35;;;;;;;5362:20;;5433:35;;;;;;;;;;;;;5047:429;;;:::o;1315:184:5:-;1373:7;1406:1;1401;:6;;1393:49;;;;;-1:-1:-1;;;1393:49:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1465:5:5;;;1315:184::o;859:181::-;917:7;949:5;;;973:6;;;;965:46;;;;;-1:-1:-1;;;965:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:1;859:181;-1:-1:-1;;;859:181:5:o;5808:306:0:-;-1:-1:-1;;;;;5883:21:0;;5875:67;;;;-1:-1:-1;;;5875:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5970:12;;:23;;5987:5;5970:23;:16;:23;:::i;:::-;5955:12;:38;-1:-1:-1;;;;;6025:18:0;;;;;;:9;:18;;;;;;:29;;6048:5;6025:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6004:18:0;;;;;;:9;:18;;;;;;;;:50;;;;6070:36;;;;;;;6004:18;;6070:36;;;;;;;;;;;5808:306;;:::o;2162:229:4:-;-1:-1:-1;;;;;2236:22:4;;2228:73;;;;-1:-1:-1;;;2228:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2338:6;;;2317:38;;-1:-1:-1;;;;;2317:38:4;;;;2338:6;;;2317:38;;;2366:6;:17;;-1:-1:-1;;;;;;2366:17:4;-1:-1:-1;;;;;2366:17:4;;;;;;;;;;2162:229::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./ERC20Burnable.sol\";\r\n\r\n/**\r\n * @dev dAppStore Token implementation.\r\n */\r\ncontract dAppStoreToken is  ERC20Burnable {\r\n    using SafeMath for uint256;\r\n\r\n    string public constant name = \"dAppstore Token\";\r\n    string public constant symbol = \"DAPPX\";\r\n    uint8 public constant decimals = 18;\r\n\r\n    uint256 internal constant INITIAL_SUPPLY = 1.5 * (10**9) * (10 ** uint256(decimals)); // 1.5 billions tokens\r\n\r\n    /**\r\n    * @dev Constructor that gives msg.sender all of existing tokens.\r\n    */\r\n    constructor() public {\r\n        _totalSupply = INITIAL_SUPPLY;\r\n        _balances[msg.sender] = INITIAL_SUPPLY;\r\n        emit Transfer(address(0), msg.sender, INITIAL_SUPPLY);\r\n    }\r\n}",
  "sourcePath": "/mnt/d/project/DCN/dappx/contracts/dAppStoreToken.sol",
  "ast": {
    "absolutePath": "/mnt/d/project/DCN/dappx/contracts/dAppStoreToken.sol",
    "exportedSymbols": {
      "dAppStoreToken": [
        775
      ]
    },
    "id": 776,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 720,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/mnt/d/project/DCN/dappx/contracts/ERC20Burnable.sol",
        "file": "./ERC20Burnable.sol",
        "id": 721,
        "nodeType": "ImportDirective",
        "scope": 776,
        "sourceUnit": 349,
        "src": "27:29:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 722,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 348,
              "src": "139:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$348",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 723,
            "nodeType": "InheritanceSpecifier",
            "src": "139:13:6"
          }
        ],
        "contractDependencies": [
          328,
          348,
          417,
          585
        ],
        "contractKind": "contract",
        "documentation": "@dev dAppStore Token implementation.",
        "fullyImplemented": true,
        "id": 775,
        "linearizedBaseContracts": [
          775,
          348,
          328,
          585,
          417
        ],
        "name": "dAppStoreToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 726,
            "libraryName": {
              "contractScope": null,
              "id": 724,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 718,
              "src": "166:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$718",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "160:27:6",
            "typeName": {
              "id": 725,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "179:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 729,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 775,
            "src": "195:47:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 727,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "195:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "6441707073746f726520546f6b656e",
              "id": 728,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "225:17:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_f23c03e19ef08587b55a2f8dc5aef44d5e0b2fbc49742f097bc06e6e0a82ecb5",
                "typeString": "literal_string \"dAppstore Token\""
              },
              "value": "dAppstore Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 732,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 775,
            "src": "249:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 730,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "249:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4441505058",
              "id": 731,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "281:7:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_f6ef51de113191ed546a3c06d33de22f5ceddbb3ca915c6275b61a564ef28367",
                "typeString": "literal_string \"DAPPX\""
              },
              "value": "DAPPX"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 735,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 775,
            "src": "295:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 733,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "295:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 734,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "328:2:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 750,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 775,
            "src": "339:84:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 736,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "339:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 749,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_1500000000_by_1",
                  "typeString": "int_const 1500000000"
                },
                "id": 742,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "312e35",
                  "id": 737,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "382:3:6",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_2",
                    "typeString": "rational_const 3 / 2"
                  },
                  "value": "1.5"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "argumentTypes": null,
                  "components": [
                    {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000_by_1",
                        "typeString": "int_const 1000000000"
                      },
                      "id": 740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "389:2:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "39",
                        "id": 739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "393:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        },
                        "value": "9"
                      },
                      "src": "389:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000_by_1",
                        "typeString": "int_const 1000000000"
                      }
                    }
                  ],
                  "id": 741,
                  "isConstant": false,
                  "isInlineArray": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "TupleExpression",
                  "src": "388:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000000_by_1",
                    "typeString": "int_const 1000000000"
                  }
                },
                "src": "382:13:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1500000000_by_1",
                  "typeString": "int_const 1500000000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "399:2:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 745,
                          "name": "decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 735,
                          "src": "413:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "405:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "405:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "399:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 748,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "398:25:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "382:41:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "563:161:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 753,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "574:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 754,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "589:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "574:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "574:29:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 757,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "614:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 760,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 758,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 790,
                          "src": "624:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "624:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "614:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 761,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "638:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "614:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "614:38:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "685:1:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "677:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "677:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 768,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 790,
                          "src": "689:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "689:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 770,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "701:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 764,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "668:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "668:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "EmitStatement",
                  "src": "663:53:6"
                }
              ]
            },
            "documentation": "@dev Constructor that gives msg.sender all of existing tokens.",
            "id": 774,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "553:2:6"
            },
            "returnParameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:0:6"
            },
            "scope": 775,
            "src": "542:182:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 776,
        "src": "111:616:6"
      }
    ],
    "src": "0:727:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/mnt/d/project/DCN/dappx/contracts/dAppStoreToken.sol",
      "exportedSymbols": {
        "dAppStoreToken": [
          775
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 720,
        "name": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "attributes": {
          "SourceUnit": 349,
          "absolutePath": "/mnt/d/project/DCN/dappx/contracts/ERC20Burnable.sol",
          "file": "./ERC20Burnable.sol",
          "scope": 776,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 721,
        "name": "ImportDirective",
        "src": "27:29:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            328,
            348,
            417,
            585
          ],
          "contractKind": "contract",
          "documentation": "@dev dAppStore Token implementation.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            775,
            348,
            328,
            585,
            417
          ],
          "name": "dAppStoreToken",
          "scope": 776
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Burnable",
                  "referencedDeclaration": 348,
                  "type": "contract ERC20Burnable"
                },
                "id": 722,
                "name": "UserDefinedTypeName",
                "src": "139:13:6"
              }
            ],
            "id": 723,
            "name": "InheritanceSpecifier",
            "src": "139:13:6"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 718,
                  "type": "library SafeMath"
                },
                "id": 724,
                "name": "UserDefinedTypeName",
                "src": "166:8:6"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 725,
                "name": "ElementaryTypeName",
                "src": "179:7:6"
              }
            ],
            "id": 726,
            "name": "UsingForDirective",
            "src": "160:27:6"
          },
          {
            "attributes": {
              "constant": true,
              "name": "name",
              "scope": 775,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 727,
                "name": "ElementaryTypeName",
                "src": "195:6:6"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "6441707073746f726520546f6b656e",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"dAppstore Token\"",
                  "value": "dAppstore Token"
                },
                "id": 728,
                "name": "Literal",
                "src": "225:17:6"
              }
            ],
            "id": 729,
            "name": "VariableDeclaration",
            "src": "195:47:6"
          },
          {
            "attributes": {
              "constant": true,
              "name": "symbol",
              "scope": 775,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 730,
                "name": "ElementaryTypeName",
                "src": "249:6:6"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "4441505058",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"DAPPX\"",
                  "value": "DAPPX"
                },
                "id": 731,
                "name": "Literal",
                "src": "281:7:6"
              }
            ],
            "id": 732,
            "name": "VariableDeclaration",
            "src": "249:39:6"
          },
          {
            "attributes": {
              "constant": true,
              "name": "decimals",
              "scope": 775,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint8",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint8",
                  "type": "uint8"
                },
                "id": 733,
                "name": "ElementaryTypeName",
                "src": "295:5:6"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "3138",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 18",
                  "value": "18"
                },
                "id": 734,
                "name": "Literal",
                "src": "328:2:6"
              }
            ],
            "id": 735,
            "name": "VariableDeclaration",
            "src": "295:35:6"
          },
          {
            "attributes": {
              "constant": true,
              "name": "INITIAL_SUPPLY",
              "scope": 775,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 736,
                "name": "ElementaryTypeName",
                "src": "339:7:6"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "operator": "*",
                  "type": "uint256"
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1500000000_by_1",
                        "typeString": "int_const 1500000000"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "operator": "*",
                      "type": "int_const 1500000000"
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "312e35",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "rational_const 3 / 2",
                          "value": "1.5"
                        },
                        "id": 737,
                        "name": "Literal",
                        "src": "382:3:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "type": "int_const 1000000000"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000_by_1",
                                "typeString": "int_const 1000000000"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "operator": "**",
                              "type": "int_const 1000000000"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3130",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 10",
                                  "value": "10"
                                },
                                "id": 738,
                                "name": "Literal",
                                "src": "389:2:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "39",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 9",
                                  "value": "9"
                                },
                                "id": 739,
                                "name": "Literal",
                                "src": "393:1:6"
                              }
                            ],
                            "id": 740,
                            "name": "BinaryOperation",
                            "src": "389:5:6"
                          }
                        ],
                        "id": 741,
                        "name": "TupleExpression",
                        "src": "388:7:6"
                      }
                    ],
                    "id": 742,
                    "name": "BinaryOperation",
                    "src": "382:13:6"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "type": "uint256"
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "operator": "**",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "3130",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 10",
                              "value": "10"
                            },
                            "id": 743,
                            "name": "Literal",
                            "src": "399:2:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 744,
                                "name": "ElementaryTypeNameExpression",
                                "src": "405:7:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 735,
                                  "type": "uint8",
                                  "value": "decimals"
                                },
                                "id": 745,
                                "name": "Identifier",
                                "src": "413:8:6"
                              }
                            ],
                            "id": 746,
                            "name": "FunctionCall",
                            "src": "405:17:6"
                          }
                        ],
                        "id": 747,
                        "name": "BinaryOperation",
                        "src": "399:23:6"
                      }
                    ],
                    "id": 748,
                    "name": "TupleExpression",
                    "src": "398:25:6"
                  }
                ],
                "id": 749,
                "name": "BinaryOperation",
                "src": "382:41:6"
              }
            ],
            "id": 750,
            "name": "VariableDeclaration",
            "src": "339:84:6"
          },
          {
            "attributes": {
              "documentation": "@dev Constructor that gives msg.sender all of existing tokens.",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 775,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 751,
                "name": "ParameterList",
                "src": "553:2:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 752,
                "name": "ParameterList",
                "src": "563:0:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 23,
                              "type": "uint256",
                              "value": "_totalSupply"
                            },
                            "id": 753,
                            "name": "Identifier",
                            "src": "574:12:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 750,
                              "type": "uint256",
                              "value": "INITIAL_SUPPLY"
                            },
                            "id": 754,
                            "name": "Identifier",
                            "src": "589:14:6"
                          }
                        ],
                        "id": 755,
                        "name": "Assignment",
                        "src": "574:29:6"
                      }
                    ],
                    "id": 756,
                    "name": "ExpressionStatement",
                    "src": "574:29:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 15,
                                  "type": "mapping(address => uint256)",
                                  "value": "_balances"
                                },
                                "id": 757,
                                "name": "Identifier",
                                "src": "614:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 790,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 758,
                                    "name": "Identifier",
                                    "src": "624:3:6"
                                  }
                                ],
                                "id": 759,
                                "name": "MemberAccess",
                                "src": "624:10:6"
                              }
                            ],
                            "id": 760,
                            "name": "IndexAccess",
                            "src": "614:21:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 750,
                              "type": "uint256",
                              "value": "INITIAL_SUPPLY"
                            },
                            "id": 761,
                            "name": "Identifier",
                            "src": "638:14:6"
                          }
                        ],
                        "id": 762,
                        "name": "Assignment",
                        "src": "614:38:6"
                      }
                    ],
                    "id": 763,
                    "name": "ExpressionStatement",
                    "src": "614:38:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 408,
                              "type": "function (address,address,uint256)",
                              "value": "Transfer"
                            },
                            "id": 764,
                            "name": "Identifier",
                            "src": "668:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 765,
                                "name": "ElementaryTypeNameExpression",
                                "src": "677:7:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 766,
                                "name": "Literal",
                                "src": "685:1:6"
                              }
                            ],
                            "id": 767,
                            "name": "FunctionCall",
                            "src": "677:10:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 790,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 768,
                                "name": "Identifier",
                                "src": "689:3:6"
                              }
                            ],
                            "id": 769,
                            "name": "MemberAccess",
                            "src": "689:10:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 750,
                              "type": "uint256",
                              "value": "INITIAL_SUPPLY"
                            },
                            "id": 770,
                            "name": "Identifier",
                            "src": "701:14:6"
                          }
                        ],
                        "id": 771,
                        "name": "FunctionCall",
                        "src": "668:48:6"
                      }
                    ],
                    "id": 772,
                    "name": "EmitStatement",
                    "src": "663:53:6"
                  }
                ],
                "id": 773,
                "name": "Block",
                "src": "563:161:6"
              }
            ],
            "id": 774,
            "name": "FunctionDefinition",
            "src": "542:182:6"
          }
        ],
        "id": 775,
        "name": "ContractDefinition",
        "src": "111:616:6"
      }
    ],
    "id": 776,
    "name": "SourceUnit",
    "src": "0:727:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x00d8318E44780EdEEFcF3020A5448F636788883C",
      "transactionHash": "0x4a5ea28bfc8c41e5ed2bd0709f357195c7d4b60bd195c723278dbdedf3504292"
    },
    "3": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9e9F488b561cF3B65B173c4d9D33e06c2b3fa8bc",
      "transactionHash": "0x704bfbddffe7bdd926a5a2190a455b989af06b029577e60480c941d937021b29"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-04-01T13:33:28.564Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "dAppStore Token implementation.",
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.      * Requirements:      * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "burn(uint256)": {
        "details": "Destoys `amount` tokens from the caller.      * See `ERC20._burn`."
      },
      "constructor": {
        "details": "Constructor that gives msg.sender all of existing tokens."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.      * Emits an `Approval` event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.      * Emits an `Approval` event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`.      * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}